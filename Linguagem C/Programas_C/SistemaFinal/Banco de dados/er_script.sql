-- MySQL Script generated by MySQL Workbench
-- Wed 24 Nov 2021 09:45:14 AM -03
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema sistema_agendamento
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema sistema_agendamento
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `sistema_agendamento` ;
USE `sistema_agendamento` ;

-- -----------------------------------------------------
-- Table `sistema_agendamento`.`estagiario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sistema_agendamento`.`estagiario` (
  `codigo_estagiario` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(100) NOT NULL,
  `matricula` INT(8) NOT NULL,
  `disciplinas_cursadas` TEXT NOT NULL,
  `ativo` TINYINT NULL DEFAULT NULL,
  PRIMARY KEY (`codigo_estagiario`),
  UNIQUE INDEX (`matricula` ASC) VISIBLE);


-- -----------------------------------------------------
-- Table `sistema_agendamento`.`professor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sistema_agendamento`.`professor` (
  `codigo_professor` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(100) NOT NULL,
  `numero_identificacao` INT(8) NOT NULL,
  `disciplinas` TEXT NOT NULL,
  `estagiarios_supervisionados` TEXT NOT NULL,
  `ativo` TINYINT NULL DEFAULT NULL,
  PRIMARY KEY (`codigo_professor`),
  UNIQUE INDEX (`numero_identificacao` ASC) VISIBLE);


-- -----------------------------------------------------
-- Table `sistema_agendamento`.`usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sistema_agendamento`.`usuario` (
  `codigo_usuario` INT NOT NULL AUTO_INCREMENT,
  `codigo_paciente` INT NOT NULL,
  `codigo_consulta` INT NOT NULL,
  `nome_usuario` VARCHAR(15) NOT NULL,
  `senha` INT NOT NULL,
  `ativo` TINYINT NULL DEFAULT NULL,
  `estagiario_codigo_estagiario` INT NOT NULL,
  `professor_codigo_professor` INT NOT NULL,
  PRIMARY KEY (`codigo_usuario`, `estagiario_codigo_estagiario`, `professor_codigo_professor`),
  UNIQUE INDEX (`nome_usuario` ASC) VISIBLE,
  INDEX `fk_usuario_estagiario_idx` (`estagiario_codigo_estagiario` ASC) VISIBLE,
  INDEX `fk_usuario_professor1_idx` (`professor_codigo_professor` ASC) VISIBLE,
  CONSTRAINT `fk_usuario_estagiario`
    FOREIGN KEY (`estagiario_codigo_estagiario`)
    REFERENCES `sistema_agendamento`.`estagiario` (`codigo_estagiario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_usuario_professor1`
    FOREIGN KEY (`professor_codigo_professor`)
    REFERENCES `sistema_agendamento`.`professor` (`codigo_professor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `sistema_agendamento`.`estado`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sistema_agendamento`.`estado` (
  `codigo_estado` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(150) NOT NULL,
  `sigla` CHAR(2) NOT NULL,
  `ativo` TINYINT NULL DEFAULT NULL,
  PRIMARY KEY (`codigo_estado`));


-- -----------------------------------------------------
-- Table `sistema_agendamento`.`cidade`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sistema_agendamento`.`cidade` (
  `codigo_cidade` INT NOT NULL AUTO_INCREMENT,
  `codigo_estado` INT NOT NULL,
  `nome` VARCHAR(150) NOT NULL,
  `ativo` TINYINT NULL DEFAULT NULL,
  `estado_codigo_estado` INT NOT NULL,
  PRIMARY KEY (`codigo_cidade`),
  INDEX `fk_cidade_estado1_idx` (`estado_codigo_estado` ASC) VISIBLE,
  CONSTRAINT `fk_cidade_estado1`
    FOREIGN KEY (`estado_codigo_estado`)
    REFERENCES `sistema_agendamento`.`estado` (`codigo_estado`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `sistema_agendamento`.`paciente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sistema_agendamento`.`paciente` (
  `codigo_paciente` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(100) NOT NULL,
  `data_nascimento` INT(8) NOT NULL,
  `genero` CHAR(1) NOT NULL,
  `estado_civil` VARCHAR(10) NOT NULL,
  `cidade` VARCHAR(100) NOT NULL,
  `cep` INT(8) NOT NULL,
  `telefone` VARCHAR(20) NOT NULL,
  `email` VARCHAR(100) NOT NULL,
  `ativo` TINYINT NULL DEFAULT NULL,
  `cidade_codigo_cidade` INT NOT NULL,
  PRIMARY KEY (`codigo_paciente`),
  UNIQUE INDEX (`email` ASC) VISIBLE,
  INDEX `fk_paciente_cidade1_idx` (`cidade_codigo_cidade` ASC) VISIBLE,
  CONSTRAINT `fk_paciente_cidade1`
    FOREIGN KEY (`cidade_codigo_cidade`)
    REFERENCES `sistema_agendamento`.`cidade` (`codigo_cidade`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `sistema_agendamento`.`consulta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sistema_agendamento`.`consulta` (
  `codigo_consulta` INT NOT NULL AUTO_INCREMENT,
  `codigo_paciente` INT NOT NULL,
  `paciente` VARCHAR(100) NOT NULL,
  `data_consulta` DATE NOT NULL,
  `horario` TIME NOT NULL,
  `ativo` TINYINT NULL DEFAULT NULL,
  `paciente_codigo_paciente` INT NOT NULL,
  PRIMARY KEY (`codigo_consulta`),
  UNIQUE INDEX (`paciente` ASC) VISIBLE,
  INDEX `fk_consulta_paciente1_idx` (`paciente_codigo_paciente` ASC) VISIBLE,
  CONSTRAINT `fk_consulta_paciente1`
    FOREIGN KEY (`paciente_codigo_paciente`)
    REFERENCES `sistema_agendamento`.`paciente` (`codigo_paciente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
